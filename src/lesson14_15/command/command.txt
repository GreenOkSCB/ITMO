Команда — это поведенческий паттерн, позволяющий заворачивать запросы или простые операции в отдельные объекты.
Это позволяет откладывать выполнение команд, выстраивать их в очереди, а также хранить историю и делать отмену.

Примеры Команд в стандартных библиотеках Java:
Все реализации java.lang.Runnable
Все реализации javax.swing.Action

Используется для создания гибкого механизма действий над чем-либо или команд.
В этом механизме класс отправитель команды и класс получатель не зависят друг от друга.
В данном паттерне объект «Команды» инкапсулирует как само действие, так и его параметры.

Паттерн «Команда» состоит из следующих компонентов (классический вариант):

Command (Команда)
Базовый класс. Объявляет интерфейс для выполняемой операции (команды);
ConcretteCommand (Конкретная команда)
Определяет связь между объектом получателем (Receiver) и действием. Реализует интерфейс, объявленный Command;
Client (Клиент)
Создаёт объект ConcretteCommand и задаёт для него получателя;
Invoker (Инициатор)
Обращается к команде для выполнения операции;
Receiver (Получатель)
Располагает информацией о способах выполнения команды. В его роли может выступить любой класс.

Паттерн «Команда» может пригодиться в следующих областях [2].
GUI (в основном, кнопки пользовательского интерфейса и пункты меню);
Запись макросов;
Многоуровневая отмена операций (Undo);
Сети;
Индикаторы выполнения;
Пулы потоков;
Транзакции;
Мастера (мастера настроек, установки программ и т.п.).





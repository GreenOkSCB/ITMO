Аннотации в Java предоставляют лишь информацию о коде
и не имеют прямого влияния на сам код.
Создание пользовательских аннотаций в Java очень похоже
на создание интерфейса,
только само ключевое слово interface пишется со знаком @

Требования
Методы в пользовательской аннотации должны быть без
параметров.
Методы в пользовательской аннотации могут возвращать лишь примитивы, String, Перечисления (Enums), аннотации.
Методы в пользовательской аннотации могут иметь значения по умолчанию.
Аннотации могут иметь мета-аннотации, прикрепленные к ним:
    Мета аннотации используются для предоставления информации об аннотации:
    @Documented — указывает, что элементы, использующие эту аннотацию должны быть задокументированы
    в Javadoc и аналогичных инструментах.
    @Target — указывает виды элементов программы, к которым применим тип аннотации.
    Возможные значения: TYPE, METHOD, CONSTRUCTOR, FIELD и т.д.
    Если мета-аннотация @Target не используется, то аннотация может быть использована в любом элементе программы.
    @Inherited — указывает, что тип аннотации автоматически передается по наследству.
    Если пользователь запрашивает тип аннотации на объявление класса, а объявление класса не имеет аннотацию для этого типа,
    то суперкласс класса будет автоматически запрошен для типа аннотации.
    Этот процесс будет повторяться до тех пор, пока аннотация для этого типа не будь найдена или будет достигнута
    верхняя часть иерархии классов (Object).
    @Retention — указывает, как долго сохранять аннотации с аннотированными типами.
    Этим занимается аргумент RetentionPolicy, для которого можно использовать значения SOURCE, CLASS или RUNTIME.

Объявление классов
Классы в Java объявляются с помощью ключевого слова class
Например, class ИмяКласса {}
Объявляем новый класс с именем ИмяКласса.

Внутри фигурных скобок объявляются все поля, конструкторы и методы класса.

Перед ключевым словом class может стоять модификатор public, который делает класс доступным из всех пакетов,
тогда имя класса должно соответствовать имени файла, класс public может быть только один в файле

Объявление полей (свойств) -
если значения не заданы, то при создании объекта, задаются значения по - умолчанию:
boolean - false, числа - 0, ссылочные типы - null

class ИмяКласса {
    тип_переменной имя_переменной;
    Например,
    int age;
    String name = "Man";
}

Каждый экземпляр класса  будет иметь своё значение полей.

Обращаться к полю внутри класса, которому оно принадлежит можно просто по имени поля:

class ИмяКласса {
    тип_переменной имя_переменной;
    Например,
    int age;
    String name = "Man";

    public void showAge() {
        System.out.println("Возраст " + age);
    }
}

Конструктор - вызывается при создании нового объекта
Конструктор инициализирует объект непосредственно во время создания.
Имя конструктора совпадает с именем класса, включая регистр
Класс может иметь несколько конструкторов
Если в классе не описан конструктор, компилятор автоматически добавляет в код конструктор без параметров
Кострукторы не имеют возвращаемого значения

Сгенерировать необходимые конструкторы для инициализации объявленных полей можно с помощбю idea - alt + insert -> constructor

Объявление методов:
1. Тип возвращаемого значения (в данном примере int ) или void , если метод не возвращает значение.
2. Имя метода ( например, showAge ).
3. Список параметров ( например, someMethod(int someInt, String someStr) ).
4. Тело метода в фигурных скобках.

Если в объявлении метода не используется ключевое слово void, то метод должен явно вернуть значение с помощью оператора return.
Например,
public int getAge() {
   return age;
}
В операторе return  можно указать выражение, тогда  результатом вызова метода будет результат этого выражения
Например,
public int getAgePlus10() {
   return age + 10;
}

Тип возвращаемого значения должен совпадать с типом возвращаемого значения, указанного в объявлении, иначе будет ошибка компиляции.
Если в объявлении указано ключевое слово void , то использование return  не обязательно, но можно его указать, если хотим досрочно завершить выполнение метода

В качестве типа возвращаемого значения может использоваться имя интерфейса или класса.
Если в качестве возвращаемого значения указан интерфейс, то метод должен вернуть экземпляр любого класса, реализующего этот интерфейс, или null

Сигнатура метода — это имя метода вместе со списком параметров.
Java различает методы между собой по их сигнатуре.
В одном классе не может быть двух и более методов с одинаковой сигнатурой, но можно перегружать методы.


Ключевое слово this
Если переменная, объявленная в методе, или параметр метода имеет то же самое имя, что и свойство класса, то эта переменная затеняет (shadow) свойство класса.
Обращаясь по имени переменной в этом случае мы будем обращаться к переменной метода или параметру метода, а не к свойству класса.
Чтобы обратиться к затенённому свойству класса нужно использовать ключевое слово this , которое означает этот класс.

Пример - Human.java, Animal.java, CreateHuman.java
